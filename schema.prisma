generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id                Int                       @id @default(autoincrement())
  name              String                    @unique
  email             String                    @unique
  createdAt         DateTime                  @default(now())
  countSpaces       CountSpace[]
  countSpaceGuests  UserCountSpaceGuest[]
  countSpaceInvites UserInvitedToCountSpace[]
}

model CountSpace {
  id         Int                       @id @default(autoincrement())
  name       String
  slug       String                    @unique
  // TODO: Add description with Rich Text
  createdAt  DateTime                  @default(now())
  owner      User                      @relation(fields: [ownerName], references: [name])
  ownerName  String
  guests     UserCountSpaceGuest[]
  categories CountSpaceCategory[]
  invites    UserInvitedToCountSpace[]

  @@unique([ownerName, slug])
}

model CountSpaceCategory {
  id           Int              @id @default(autoincrement())
  name         String
  createdAt    DateTime         @default(now())
  countSpace   CountSpace       @relation(fields: [countSpaceId], references: [id])
  countSpaceId Int
  budget       Int?
  unit         String?
  items        CountSpaceItem[]

  @@unique([countSpaceId, name])
}

model CountSpaceItem {
  id                   Int                @id @default(autoincrement())
  name                 String?
  createdAt            DateTime           @default(now())
  countSpaceCategory   CountSpaceCategory @relation(fields: [countSpaceCategoryId], references: [id])
  countSpaceCategoryId Int
  amount               Int
  itemDate             DateTime

  @@unique([countSpaceCategoryId, id])
}

model UserCountSpaceGuest {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  user         User       @relation(fields: [userName], references: [name])
  userName     String
  countSpace   CountSpace @relation(fields: [countSpaceId], references: [id])
  countSpaceId Int

  @@unique([userName, countSpaceId])
}

model UserInvitedToCountSpace {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userName], references: [name])
  userName     String
  countSpace   CountSpace @relation(fields: [countSpaceId], references: [id])
  countSpaceId Int

  @@unique([userName, countSpaceId])
}
